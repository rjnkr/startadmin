/*
 * File: app/view/VliegtuigBeheerWindow.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GeZC_StartAdministratie.view.VliegtuigBeheerWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.VliegtuigBeheerWindow',

    requires: [
        'Ext.Img',
        'Ext.form.Label',
        'Ext.form.Panel',
        'Ext.form.field.Hidden',
        'Ext.form.field.Number',
        'Ext.form.field.Checkbox',
        'Ext.form.field.ComboBox',
        'Ext.button.Button'
    ],

    id: 'VliegtuigBeheerWindow',
    width: 350,
    resizable: false,
    title: 'Vliegtuig beheer',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    baseCls: 'title',
                    height: 48,
                    defaults: {
                        hideMode: 'offsets'
                    },
                    layout: 'table',
                    title: '',
                    items: [
                        {
                            xtype: 'image',
                            src: 'images/glider_add.png'
                        },
                        {
                            xtype: 'label',
                            cls: 'titel',
                            frame: true,
                            id: 'VliegtuigBeheer_Titel',
                            padding: '10px',
                            text: 'Nieuw vliegtuig'
                        }
                    ]
                },
                {
                    xtype: 'form',
                    id: 'VliegtuigBeheerForm',
                    bodyPadding: 10,
                    title: '',
                    trackResetOnLoad: true,
                    url: 'php/main.php?Action=Vliegtuigen.SaveObject',
                    items: [
                        {
                            xtype: 'hiddenfield',
                            anchor: '100%',
                            fieldLabel: 'Label',
                            name: 'ID'
                        },
                        me.processVliegtuigBeheer_Registratie({
                            xtype: 'textfield',
                            id: 'VliegtuigBeheer_Registratie',
                            width: 180,
                            fieldLabel: 'Registratie',
                            labelAlign: 'right',
                            labelWidth: 80,
                            msgTarget: 'side',
                            name: 'REGISTRATIE',
                            allowBlank: false,
                            blankText: 'Registratie van het vliegtuig is verplicht.',
                            maxLength: 8,
                            maxLengthText: 'De registratie mag niet langer zijn dan 8 tekens',
                            minLength: 5,
                            minLengthText: 'De registratie moet minimaal 5 tekens bevatten',
                            regex: /^[A-Z]{1,2}-[A-Z0-9][A-Z0-9]{2,}/,
                            regexText: 'Het formaat van de registratie klopt niet.',
                            listeners: {
                                change: {
                                    fn: me.onVliegtuigBeheer_RegistratieChange,
                                    scope: me
                                }
                            }
                        }),
                        me.processVliegtuigBeheer_Callsign({
                            xtype: 'textfield',
                            id: 'VliegtuigBeheer_Callsign',
                            width: 160,
                            fieldLabel: 'Callsign',
                            labelAlign: 'right',
                            labelWidth: 80,
                            msgTarget: 'side',
                            name: 'CALLSIGN',
                            maxLength: 13,
                            maxLengthText: 'Het callsign mag maximaal 6 tekens bevatten',
                            regex: /^[A-Z1-9][A-Z0-9]*/,
                            regexText: 'Het formaat van het callsign klopt niet.',
                            listeners: {
                                change: {
                                    fn: me.onVliegtuigBeheer_CallsignChange,
                                    scope: me
                                }
                            }
                        }),
                        {
                            xtype: 'numberfield',
                            id: 'VliegtuigBeheer_Zitplaatsen',
                            width: 140,
                            fieldLabel: 'Zitplaatsen',
                            labelAlign: 'right',
                            labelWidth: 80,
                            msgTarget: 'side',
                            name: 'ZITPLAATSEN',
                            allowBlank: false,
                            blankText: 'Aantal zitplaatsen moet ingevuld worden.',
                            maxLength: 13,
                            decimalPrecision: 0,
                            maxText: 'Het maximaal aantal zitplaatsen is 2',
                            maxValue: 2,
                            minText: 'Er moet minimaal 1 zitplaats zijn.',
                            minValue: 1,
                            nanText: '{value} is geen geldig getal',
                            negativeText: 'De waarde mag niet negatief zijn'
                        },
                        me.processVliegtuigBeheer_Flarmcode({
                            xtype: 'textfield',
                            id: 'VliegtuigBeheer_Flarmcode',
                            width: 160,
                            fieldLabel: 'Flarm code',
                            labelAlign: 'right',
                            labelWidth: 80,
                            msgTarget: 'side',
                            name: 'FLARM_CODE',
                            maxLength: 6,
                            maxLengthText: 'De Flarm code mag maximaal 6 cijfers bevatten'
                        }),
                        {
                            xtype: 'checkboxfield',
                            anchor: '100%',
                            id: 'VliegtuigBeheer_Clubkist',
                            margin: '0px 0px 0px 85px',
                            hideLabel: true,
                            labelWidth: 80,
                            name: 'CLUBKIST',
                            boxLabel: 'Clubkist',
                            inputValue: '1',
                            uncheckedValue: '0',
                            listeners: {
                                change: {
                                    fn: me.onVliegtuigBeheer_ClubkistChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'combobox',
                            validator: function(value) {
                                return Ext.VliegtuigBeheer.ValiderenVliegtuigType();
                            },
                            id: 'VliegtuigBeheer_VliegtuigType',
                            margin: '5px 0px 0px 0px',
                            fieldLabel: 'Vliegtuig type',
                            labelWidth: 80,
                            msgTarget: 'side',
                            name: 'TYPE_ID',
                            displayField: 'OMSCHRIJVING',
                            queryMode: 'local',
                            store: 'Types_VliegtuigType_Store',
                            valueField: 'ID'
                        },
                        {
                            xtype: 'checkboxfield',
                            anchor: '100%',
                            id: 'VliegtuigBeheer_Zelfstarter',
                            margin: '0px 0px 0px 85px',
                            hideLabel: true,
                            labelWidth: 80,
                            name: 'ZELFSTART',
                            boxLabel: 'Zelfstarter',
                            inputValue: '1',
                            uncheckedValue: '0',
                            listeners: {
                                change: {
                                    fn: me.onVliegtuigBeheer_ZelfstarterChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            anchor: '100%',
                            id: 'VliegtuigBeheer_TMG',
                            margin: '0px 0px 0px 85px',
                            hideLabel: true,
                            labelWidth: 80,
                            name: 'TMG',
                            boxLabel: 'TMG',
                            inputValue: '1',
                            uncheckedValue: '0',
                            listeners: {
                                change: {
                                    fn: me.onVliegtuigBeheer_TMGChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            anchor: '100%',
                            id: 'VliegtuigBeheer_Sleepkist',
                            margin: '0px 0px 0px 85px',
                            hideLabel: true,
                            labelWidth: 80,
                            name: 'SLEEPKIST',
                            boxLabel: 'Sleepkist',
                            inputValue: '1',
                            uncheckedValue: '0',
                            listeners: {
                                change: {
                                    fn: me.onVliegtuigBeheer_SleepkistChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            formBind: false,
                            height: 40,
                            id: 'InvoerenVliegtuig_Opslaan',
                            margin: '0px 240px',
                            padding: '',
                            width: 80,
                            text: 'Opslaan',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick1,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            listeners: {
                show: {
                    fn: me.onVliegtuigBeheerWindowShow,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    processVliegtuigBeheer_Registratie: function(config) {
        // Toon in het invoerveld een kruisje om het veld met 1 muisklik leeg te maken
        config.plugins = ['clearbutton'];
        return config;
    },

    processVliegtuigBeheer_Callsign: function(config) {
        // Toon in het invoerveld een kruisje om het veld met 1 muisklik leeg te maken
        config.plugins = ['clearbutton'];
        return config;
    },

    processVliegtuigBeheer_Flarmcode: function(config) {
        // Toon in het invoerveld een kruisje om het veld met 1 muisklik leeg te maken
        config.plugins = ['clearbutton'];
        return config;
    },

    onVliegtuigBeheerWindowShow: function(component, eOpts) {
        Ext.VliegtuigBeheer.onVliegtuigBeheerWindowShow(component, eOpts, this.ID);
    },

    onVliegtuigBeheer_RegistratieChange: function(field, newValue, oldValue, eOpts) {
        field.setValue(newValue.toUpperCase());
    },

    onVliegtuigBeheer_CallsignChange: function(field, newValue, oldValue, eOpts) {
        field.setValue(newValue.toUpperCase());
    },

    onVliegtuigBeheer_ClubkistChange: function(field, newValue, oldValue, eOpts) {

        Ext.VliegtuigBeheer.DynamischFormulier();
    },

    onVliegtuigBeheer_ZelfstarterChange: function(field, newValue, oldValue, eOpts) {
        Ext.VliegtuigBeheer.DynamischFormulier();
    },

    onVliegtuigBeheer_TMGChange: function(field, newValue, oldValue, eOpts) {
        Ext.VliegtuigBeheer.DynamischFormulier();
        Ext.AanpassenButtonOpslaan(Ext.getCmp('VliegtuigBeheerForm'), Ext.getCmp('InvoerenVliegtuig_Opslaan'));
    },

    onVliegtuigBeheer_SleepkistChange: function(field, newValue, oldValue, eOpts) {
        Ext.VliegtuigBeheer.DynamischFormulier();
    },

    onButtonClick1: function(button, e, eOpts) {

        var form = Ext.getCmp('VliegtuigBeheerForm');
        var valid = form.getForm().isValid();

        if (!valid)
        {
            Ext.MessageBox.show({
                title: 'Onvolledige invoer',
                msg: 'Niet alle velden zijn correct ingevoerd',
                buttons: Ext.MessageBox.OK,
                icon:  Ext.MessageBox.WARNING
            });
            return;
        }

        Ext.getCmp('InvoerenVliegtuig_Opslaan').disable();
        Ext.win.showSaving(true);

        form.getForm().submit
        ({
            success: function(req,res)
            {
                Ext.win.showSaving(false);
                Ext.win.msg("Vliegtuig is opgeslagen");

                store = Ext.data.StoreManager.lookup('VliegtuigenLijst_GridStore');
                store.load();
                button.up('.window').close();

                // als we aangeroepen zijn door het start invoer scherm moeten we het vliegtuig aanpassen
                var InvoerVliegtuig = Ext.getCmp('StartInvoer_Vliegtuig');
                if (InvoerVliegtuig != null)
                {
                    InvoerVliegtuig.store.load(
                    {
                        scope : this,
                        callback: function(records, operation, success)
                        {
                            if(success)
                            {
                                InvoerVliegtuig.setValue(res.result.ID.toString());
                            }
                        }
                    });

                }
            },
            failure: function(req,res)
            {
                Ext.win.showSaving(false);

                if (res.response.status == 200)
                Ext.MessageBox.alert ('Fout bij opslaan', res.result.error);
                else
                Ext.MessageBox.alert ('Server fout', res.response.responseText);

                button.up('.window').close();
            }
        });
    }

});